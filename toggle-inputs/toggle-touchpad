#!/usr/bin/env bash

test_device="ELAN067A:00 04F3:3197 Touchpad"
all_devices=(
    "ELAN067A:00 04F3:3197 Touchpad" \
    "TPPS/2 Elan TrackPoint" \
)
state=$(xinput list-props "$test_device" | grep "Device Enabled" | grep -o "[01]$")

if [ $state == '1' ];then
  for device in "${all_devices[@]}"
  do
    xinput --disable "$device"
  done
  notify-send "touchpad disabled" --expire-time=1
else
  for device in "${all_devices[@]}"
  do
    xinput --enable "$device"
  done
  notify-send "touchpad enabled" --expire-time=1
fi

function fake_window(){
python << END
import gobject
import gtk

"""
Create window, then destroy it shortly after to "feed" Unity a fake window,
preventing the launcher to show a spinning wheel,
waiting for a window to appear.
Include the command to run this script at the end of the (your) script.
"""
def fakewindow():
    window = gtk.Window()
    # make our window transparent
    window.set_opacity(0)
    window.set_default_size(0,0)
    window.show_all()
    gobject.timeout_add(100, lambda: gtk.main_quit())
    gtk.main()

fakewindow()
END
}

# only make fake GTK window if not running from unity launcher (not from terminal)
tty -s
if [[ "$?" != "0" ]]; then
	fake_window
fi
